name: CI/CD for Unifaires Frontend App to UAT Kubernetes

on:
  pull_request:
    branches:
      - uat
  push:
    branches:
      - uat

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log in to the Docker registry (DigitalOcean)
      - name: Log in to the Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and push Docker image to DigitalOcean Registry
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/unifaires-frontend-app:latest
          build-args: |
            NEXT_PUBLIC_API_URL=${{ secrets.NEXT_UAT_PUBLIC_API_URL }}
            NEXT_PUBLIC_API_URL2=${{ secrets.NEXT_UAT_PUBLIC_API_URL2 }}
            NEXT_PUBLIC_API_DOCUMENTATION=${{ secrets.NEXT_UAT_PUBLIC_API_DOCUMENTATION }}
            NEXT_PUBLIC_HOME_URL=${{ secrets.NEXT_UAT_PUBLIC_HOME_URL }}
            NEXT_PUBLIC_GUIDE_VIDEO_LINK=${{ secrets.NEXT_UAT_PUBLIC_GUIDE_VIDEO_LINK }}
            NEXT_PUBLIC_JWT_KEY=${{ secrets.NEXT_UAT_PUBLIC_JWT_KEY }}

  deploy:
    if: github.event_name == 'push' # Only run on push events
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # Step 3: Create .kube directory
      - name: Create .kube directory
        run: |
          mkdir -p $HOME/.kube

      # Step 4: Set up Kubeconfig
      - name: Set up Kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config

      # Step 5: Deploy to Kubernetes (apply Deployment and Service)
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/uat/deployment.yaml --namespace=${{ secrets.K8S_UAT_NAMESPACE }}
          kubectl apply -f k8s/uat/service.yaml --namespace=${{ secrets.K8S_UAT_NAMESPACE }}
          # kubectl apply -f k8s/uat/ingress.yaml --namespace=${{ secrets.K8S_UAT_NAMESPACE }}

      # Step 6: Restart the deployment to pick up the new image
      - name: Restart Deployment
        run: |
          kubectl rollout restart deployment/unifaires-frontend-app --namespace=${{ secrets.K8S_UAT_NAMESPACE }}